# unbind-key -a
# source ~/.tmux.d/.tmux.reset.conf

# set display-panes-colour "white"
# set display-panes-active-colour "black"
# bind Left select-pane -L \; display-pane -d 5000

# Custom bindings
# set -g prefix "C-Space"
set -g mouse off
set-option -g prefix C-Space
set-option -g default-shell /bin/zsh
unbind-key d

set-option -g history-limit 10000

bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded"
set -g base-index 1
setw -g pane-base-index 1

# HISTSIZE=-1 HISTFILESIZE=-1
# bind -r M-Up resize-pane -U 5
# bind -r M-Down resize-pane -D 5
# bind -r M-Left resize-pane -L 5
# bind -r M-Right resize-pane -R 5

bind -n M-[ copy-mode
bind -n M-] paste-buffer

# bind -T copy-mode C-Left send-keys -X previous-word
# bind -T copy-mode C-Right send-keys -X next-word-end
# bind -n M-T new-window -n YK -c ~/ddbs/

# bind Y setw synchronize-panes \; if-shell "tmux showw -v synchronize-panes | grep on"\
#                                           "display 'synchronize-panes on'" \
#                                           "display 'synchronize-panes off'"
                                          
bind a setw monitor-activity \; if-shell "tmux showw -v monitor-activity | grep on"\
                                         "display 'monitor-activity on'" \
                                         "display 'monitor-activity off'"
bind , command-prompt "rename-window '%%'"

# bind b choose-buffer

bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R

bind -r ^k resizep -U 6
bind -r ^j resizep -D 6
bind -r ^h resizep -L 6
bind -r ^l resizep -R 6

# 底部状态栏的风格
set -g status-keys emacs

################ copy/paste start
# 设置 tmux 为 emacs 模式
setw -g mode-keys emacs

# 配置拷贝和粘贴键绑定
bind-key -T copy-mode C-g send-keys -X begin-selection
# bind-key -T copy-mode C-w send-keys -X copy-selection-and-cancel
# bind-key -T copy-mode C-w send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# 启用鼠标支持
# set-option -g mouse on

# 从系统剪贴板粘贴
# bind-key -n C-y run "reattach-to-user-namespace pbpaste | tmux load-buffer - ; tmux paste-buffer"
################ copy/paste end

# unbind M-x
# bind -n M-x command-prompt
# bind -n M-: command-prompt

bind M-x send-keys "M-x" # Send M-x to emacs
bind M-: send-keys "M-:" # Send M-: to emacs

bind g if-shell "cd #{pane_current_path} && git diff" \
                "new-window -n git-diff -c '#{pane_current_path}' '( git diff --color=always --ignore-space-change --ignore-all-space && echo && git -c status.color=always status ) | less -r'"\
                "display 'Not a git repository.'"
# bind 0 if-shell "tmux display-message -p '#{window_panes}' | grep -v '^1$'"\
#                 "kill-pane"\
#                 "display 'Attempt to delete sole ordinary panel'"
# bind 1 run-shell "tmux list-panes | grep -o '%[[:digit:]]\\+' | xargs -I{} sh -c \
#                  'if [ #D != {} ]; then tmux kill-pane -t {}; fi'"
bind 2 split-window -v -c "#{pane_current_path}"
bind 3 split-window -h -c "#{pane_current_path}"
bind K confirm-before -p "kill-pane '#W:#P'? (y/n)" kill-pane

# bind C-b choose-tree -w

bind -n C-w switch-client -T SWITCHWINDOW

bind -T SWITCHWINDOW 0 select-window -t :=0
bind -T SWITCHWINDOW 1 select-window -t :=1
bind -T SWITCHWINDOW 2 select-window -t :=2
bind -T SWITCHWINDOW 3 select-window -t :=3
bind -T SWITCHWINDOW 4 select-window -t :=4
bind -T SWITCHWINDOW 5 select-window -t :=5
bind -T SWITCHWINDOW 6 select-window -t :=6
bind -T SWITCHWINDOW 7 select-window -t :=7
bind -T SWITCHWINDOW 8 select-window -t :=8
bind -T SWITCHWINDOW 9 select-window -t :=9

# Help mode
bind -n C-h switch-client -T HELP \; display "C-h (Type ? for further options)-"
bind -T HELP k list-keys # Display all key bindings.
bind -T HELP c new-window -n 'Commands' "man -P 'less -p ^COMMANDS' tmux" # Show the Commands tmux man page section.
bind -T HELP v new-window -n 'Variables' "man -P 'less -p \"Variable name\"' tmux" # Show the Variables tmux man page section.
bind -T HELP F new-window -n 'Formats' "man -P 'less -p ^FORMATS' tmux" # Show the Formats tmux man page section.
bind -T HELP h new-window -n 'Hooks' "man -P 'less -p ^HOOKS' tmux" # Show the Hooks tmux man page section.
# bind -T HELP H show-hooks -g # Display all active global hooks.
bind -T HELP e new-window -n 'Environment' "man -P 'less -p ^ENVIRONMENT' tmux" # Show the Environment tmux man page section.
bind -T HELP E showenv # Display the active local tmux environment.
bind -T HELP g showenv -g # Display the active global tmux environment.
bind -T HELP o show-options # Display the active local tmux options.
bind -T HELP O show-options -g # Display the active global tmux options.
bind -T HELP w show-window-options # Display the active local tmux _window_ options.
bind -T HELP W show-window-options -g # Display the active global tmux _window_ options.
bind -T HELP m new-window -n 'tmux man page' "man tmux" # Show the tmux man page from the start of the document.
bind -T HELP ? switch-client -T HELP \; new-window -n 'Help Page' "~/.tmux.d/help_doc_gen.py ~/.tmux.conf | less"
bind -T HELP q if-shell "echo #W | grep 'Help Page'" "send-keys q"

# Shtyle
set -g status-left-length 20
set-window-option -g xterm-keys on
set -g default-terminal "xterm-256color"
set -g status-style fg=black,bg=default
setw -g window-status-style fg=cyan
setw -g window-status-current-style fg=magenta
setw -g mode-style bg=blue,fg=white

# Settings
set -g display-time 2000
set -sg escape-time 0
unbind-key C-z

setw -g window-status-current-style fg=black,bg=white

# richard think theses useless
# ## Join windows: <prefix> s, <prefix> j
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"
# # bind-key B command-prompt -p "break pan"  "join-pane -t '%%'"

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

set -g default-terminal "tmux-256color"

# 使用 run-shell 执行 uname 并设置全局变量
run-shell 'if [ "$(uname)" = "Linux" ]; then tmux set -g @is-linux 1; else tmux set -g @is-linux 0; fi'
run-shell 'if [ "$(uname)" = "Darwin" ]; then tmux set -g @is-macos 1; else tmux set -g @is-macos 0; fi'

# 打印 @is-linux 和 @is-macos 的值进行调试
display-message "is-linux: #{@is-linux}, is-macos: #{@is-macos}"


# 针对 Linux 的设置
if-shell '[ "#{@is-linux}" = "1" ]' \
    'display-message "Running Linux-specific configuration"; bind-key -T copy-mode C-w send-keys -X copy-pipe "xclip -selection clipboard -i"'

# 针对 macOS 的设置（如果需要）
if-shell '[ "#{@is-macos}" = "1" ]' \
    'display-message "Running macOS-specific configuration"; bind-key -T copy-mode C-w send-keys -X copy-pipe "pbcopy"'
